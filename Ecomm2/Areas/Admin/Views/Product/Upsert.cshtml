@model Ecomm2.Models.ViewModels.ProductVM
@{
    ViewData["Title"] = "Upsert";
    var title = Model.Product.Id != 0 ? "Edit Product" : "New Product";
}
<h2 class="text-primary border-bottom">@title</h2>
<div class="row">
    <div class="col-6">
        <form method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @if (Model.Product.Id != 0)
            {
                <input type="hidden" asp-for="@Model.Product.Id" />
            }
            <div class="form-group">
                <label asp-for="Product.Title"></label>
                <input asp-for="Product.Title" class="form-control" />
                <span asp-validation-for="Product.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.Author"></label>
                <input asp-for="Product.Author" class="form-control" />
                <span asp-validation-for="Product.Author" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.Description"></label>
                <textarea type="text" id="default" asp-for="Product.Description" class="form-control" rows="2"></textarea>
                <span asp-validation-for="Product.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.ISBN"></label>
                <input asp-for="Product.ISBN" class="form-control" />
                <span asp-validation-for="Product.ISBN" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.Price"></label>
                <input asp-for="Product.Price" class="form-control" />
                <span asp-validation-for="Product.Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.ListPrice"></label>
                <input asp-for="Product.ListPrice" class="form-control" />
                <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.Price50"></label>
                <input asp-for="Product.Price50" class="form-control" />
                <span asp-validation-for="Product.Price50" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.Price100"></label>
                <input asp-for="Product.Price100" class="form-control" />
                <span asp-validation-for="Product.Price100" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.ImageURL"></label>
                <input type="file" id="imageID" name="files" multiple class="form-control" />
                <span asp-validation-for="Product.Price100" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.CategoryId"></label>
                <select asp-for="Product.CategoryId" asp-items="@Model.CategoryList" class="form-control">
                    <option value="">Select any Category</option>
                </select>
                <span asp-validation-for="Product.Category" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.CoverTypeId"></label>
                <select asp-for="Product.CoverTypeId" asp-items="@Model.CoverTypeList" class="form-control">
                    <option value="">Select any Cover Type</option>
                </select>
                <span asp-validation-for="Product.CoverType" class="text-danger"></span>
            </div>
            <div class="form-group mt-2">
                @if (Model.Product.Id != 0)
                {
                    <partial name="_EditAndBackButton" />
                }
                else
                {
                    <div class="row">
                        <div class="col-6">
                            <button type="submit" class="btn btn-outline-success form-control" onclick="return ValData()">Save</button>
                        </div>
                        <div class="col-6">
                            <a asp-action="Index" class="btn btn-outline-info form-control">Back to List</a>
                        </div>
                    </div>

                }
            </div>
        </form>
    </div>
    <div class="col-6">
        @if (Model.Product.ImageURL != null)
        {
            <img src="@Model.Product.ImageURL" class="img-fluid w-100 p-4" style="height: 600px; object-fit: contain; box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);" />
        }
    </div>
</div>

@section Scripts
    {
    <partial name="_ValidationScriptsPartial" />
}
<script src="https://cdn.tiny.cloud/1/5huiufd4ge3olahyx9db7vi2n2uo7254w2irjzfgajzbru2b/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>
<script>
    /*
    tinymce.init({
        selector: 'textarea',
        plugins: [
            // Core editing features
            'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'image', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
            // Your account includes a free trial of TinyMCE premium features
            // Try the most popular premium features until Nov 15, 2024:
            'checklist', 'mediaembed', 'casechange', 'export', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown',
            // Early access to document converters
            'importword', 'exportword', 'exportpdf'
        ],
        toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
        tinycomments_mode: 'embedded',
        tinycomments_author: 'Author name',
        mergetags_list: [
            { value: 'First.Name', title: 'First Name' },
            { value: 'Email', title: 'Email' },
        ],
        ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
        exportpdf_converter_options: { 'format': 'Letter', 'margin_top': '1in', 'margin_right': '1in', 'margin_bottom': '1in', 'margin_left': '1in' },
        exportword_converter_options: { 'document': { 'size': 'Letter' } },
        importword_converter_options: { 'formatting': { 'styles': 'inline', 'resets': 'inline', 'defaults': 'inline', } },
    });
    */

    tinymce.init({
        selector: 'textarea#default',
        plugins: "lists",
        member: "file edit format"
    });
    function ValData()
    {
        if (document.getElementById('imageID').value == "")
        {
            swal('Could not find image','Please Select Image!!!', 'error');
            return false;
        }
    }
</script>